@model IEnumerable<admin_ViewModel>

@{
    ViewData["Title"] = "Index";
}
@section Styles {

    <link href="~/css/datatables.css" rel="stylesheet" />

}

<h1>管理員</h1>

<p>
    @* <a asp-action="Create">Create New</a> *@
    <a class="btn button" data-bs-toggle="modal" data-bs-target="#adminCreateModal">
        <i class="fa-solid fa-plus fa-lg"></i>
    </a>
    @* creat new modal start *@
    <div class="modal fade" id="adminCreateModal" tabindex="-1" aria-labelledby="adminCreateModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    @* <h5 class="modal-title" id="createModalLabel">Create New Activity Type</h5> *@
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div>
                        <partial name="_adminCreate_Partial" model="new gacha.ViewModels.admin_ViewModel()"></partial>
                    </div>
                </div>
                @*  <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div> *@
            </div>
        </div>
    </div>
    @* creat new modal end *@
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.phoneNumber)
            </th>
            @* <th>
            @Html.DisplayNameFor(model => model.password)
            </th> *@
            <th>
                @Html.DisplayNameFor(model => model.title)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.phoneNumber)
                </td>
                @* <td>
            @Html.DisplayFor(modelItem => item.password)
            </td> *@
                <td>
                    @Html.DisplayFor(modelItem => item.title)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.account">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.account">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.account">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@section Scripts {
    <script src="~/lib/datatables/js/jquery.datatables.min.js" asp-append-version="true"></script>
    <script src="//cdn.datatables.net/fixedheader/3.3.1/js/dataTables.fixedHeader.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>

    <script src="~/js/datatables.js"></script>
    <script>
        $(document).ready(function () {
            console.log("Document ready");
            if (!$.fn.DataTable.isDataTable('table')) {
                console.log("Initializing DataTable");
                $('table').DataTable({
                    fixedHeader: {
                        header: true,
                    },
                    language: {
                        url: '//cdn.datatables.net/plug-ins/2.0.8/i18n/zh-HANT.json',
                    },
                    columnDefs: [
                        {
                            targets: '_all',
                            className: 'text-center'
                        }
                    ],
                });
            } else {
                console.log("DataTable already initialized");
            }

            // 換頁時回到最上面
            $('table').on('page.dt', function () {
                $('html, body').animate({
                    scrollTop: $(".dataTables_wrapper").offset().top
                }, 50);
            });
        });

        


        $("#createForm").submit(function (e) {
            e.preventDefault();

            // 手動觸發客戶端驗證
            var form = $(this);
            if (form.valid()) {
                $.ajax({
                    url: form.attr("action"),
                    type: "POST",
                    data: form.serialize(),
                    success: function (response) {
                        if (response.success) {
                            // 成功邏輯
                            $('#createModal').modal('hide');
                            alert(response.message);
                            location.reload();
                        } else {
                            // 顯示伺服器端驗證錯誤
                            let errorList = $('#errorList');
                            errorList.empty();  // 清空以前的錯誤訊息
                            alert(response.message);
                            response.errors.forEach(function (error) {
                                errorList.append('<li class="text-danger">' + error + '</li>');
                            });
                        }
                    }
                });
            } else {
                // 如果表單無效，則不進行AJAX提交
                console.log("表單驗證失敗");
            }
        });

        // // Bootstrap validation for create/edit forms
        // (function () {
        //     'use strict';

        //     // Fetch all forms to apply custom Bootstrap validation styles
        //     var forms = document.querySelectorAll('.needs-validation');

        //     // Loop over them and prevent submission
        //     Array.prototype.slice.call(forms)
        //         .forEach(function (form) {
        //             form.addEventListener('submit', function (event) {
        //                 if (!form.checkValidity()) {
        //                     event.preventDefault();
        //                     event.stopPropagation();
        //                 }
        //                 form.classList.add('was-validated');
        //             }, false);
        //                 // else {
        //                 //     event.preventDefault(); // Prevent default form submission

        //                     // // Collect form data
        //                     // var formData = {
        //                     //     account: $('#createAdminForm [name="account"]').val(),
        //                     //     name: $('#createAdminForm [name="name"]').val(),
        //                     //     roleId: $('#createAdminForm [name="roleId"]').val(),
        //                     //     email: $('#createAdminForm [name="email"]').val(),
        //                     //     phoneNumber: $('#createAdminForm [name="phoneNumber"]').val(),
        //                     //     password: $('#createAdminForm [name="password"]').val(),
        //                     //     confirmPassword: $('#createAdminForm [name="confirmPassword"]').val()
        //                     // };

        //                     //phone validation
        //                     // var phonenumber = formData.phoneNumber;
        //                     // var phonenumberPattern = /^(09)([0-9]{8})/;
        //                     // if (!phonenumberPattern.test(phonenumber)) {
        //                     //     alert("請輸入有效的台灣手機號碼，格式為09開頭的十位數字");
        //                     //     return;
        //                     // }

        //                     // //password validation
        //                     // var password = formData.password;
        //                     // var confirmPassword = formData.confirmPassword;

        //                     // var passwordPattern = /^(?=.*[A-Za-z])(?=.*\d)(?=.*[@@$!%*?&])[A-Za-z\d@@$!%*?&]{6,}$/;
        //                     // if (!passwordPattern.test(password)) {
        //                     //     alert("密碼必須至少6個字符長, 且包含數字和特殊字符");
        //                     //     return;
        //                     // }

        //                     // if (password !== confirmPassword) {
        //                     //     alert("新密碼和確認密碼不同");
        //                     //     return;
        //                     // }
        //                 //     $('.text-danger').text('');
                            
        //                 //     $.ajax({
        //                 //         url: '@@Url.Action("Create", "admin")',
        //                 //         type: 'POST',
        //                 //         data: $(this).serialize(), // 這是你要提交的表單數據
        //                 //         success: function (response) {
        //                 //             if (response.success) {
        //                 //                 $('#createAdminModal').modal('hide');
        //                 //                 alert("帳戶建立成功^^");
        //                 //                 location.href = '@@Url.Action("Index", "admin")'; // 成功後重定向到Index頁面
        //                 //             } else {
        //                 //                 // 處理從後端返回的錯誤或驗證失敗信息
        //                 //                 if (response.errors) {
        //                 //                     // Validation Error
        //                 //                     $.each(response.errors, function (key, value) {
        //                 //                         $('#createAdminForm [name="' + key + '"]').siblings('.text-danger').text(value);
        //                 //                     });
        //                 //                 } else {
        //                 //                     // 其他錯誤（例如帳號已存在等）
        //                 //                     alert(response.message);
        //                 //                 }
        //                 //             }
        //                 //         },
        //                 //         error: function (xhr, status, error) {
        //                 //             // 處理異常錯誤
        //                 //             var errorMessage = xhr.responseJSON?.message || "建立失敗，請稍後再試。";
        //                 //             alert(errorMessage);
        //                 //         }
        //                 //     });
        //                 // }

                      
        //         });
        // })();
    </script>
}

